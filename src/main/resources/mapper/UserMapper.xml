<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ams.system.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.ams.system.entity.User">
        <id column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="salt" jdbcType="VARCHAR" property="salt" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="student_id" jdbcType="INTEGER" property="studentId" />
    </resultMap>

    <sql id="Base_Column_List">
        user_id, username, password, salt, status, last_login_time,
        create_time, modify_time, email, phone, student_id
    </sql>
    
    <update id="updateByPrimaryKey" parameterType="com.ams.system.entity.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
          `password` = #{password,jdbcType=VARCHAR},
          salt = #{salt,jdbcType=VARCHAR},
          `status` = #{status,jdbcType=INTEGER},
          last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
          create_time = #{createTime,jdbcType=TIMESTAMP},
          modify_time = #{modifyTime,jdbcType=TIMESTAMP},
          email = #{email,jdbcType=VARCHAR},
          phone = #{phone,jdbcType=VARCHAR},
          student_id = #{studentId,jdbcType=INTEGER}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select user_id, username, `password`, salt, `status`, last_login_time, create_time, 
        modify_time, email, phone, student_id
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select user_id, username, `password`, salt, `status`, last_login_time, create_time, 
        modify_time, email, phone, student_id
        from user
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    
    <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.ams.system.entity.User" useGeneratedKeys="true">
        insert into user (username, `password`, 
          salt, email, phone)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
          #{salt,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
          #{phone,jdbcType=VARCHAR})
    </insert>
    
    <select id="selectJobNameByUsername" parameterType="java.lang.String" resultType="java.lang.String">
        select role.job_name
        from user,
        role,
        user_job
        where user.user_id = user_job.user_id
        and role.job_id = user_job.job_id
        and user.username= #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectPermsByUsername" parameterType="java.lang.String" resultType="java.lang.String">
        select menu.perms
        from user,
        role,
        user_job,
        menu,
        job_menu
        where user.user_id = user_job.user_id
        and role.job_id = user_job.job_id
        and role.job_id = job_menu.job_id
        and menu.menu_id = job_menu.menu_id
        and user.username= #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectOperatorPermsByUsername" parameterType="java.lang.String" resultType="java.lang.String">
        select operator.perms
        from user,
        role,
        user_job,
        operator,
        job_operator
        where user.user_id = user_job.user_id
        and role.job_id = user_job.job_id
        and role.job_id = job_operator.job_id
        and operator.operator_id = job_operator.operator_id
        and user.username= #{username,jdbcType=VARCHAR}
    </select>
    
    <select id="selectOneByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where username = #{username,jdbcType=VARCHAR}
    </select>
    
    <update id="updateLastLoginTimeByUsername" parameterType="java.lang.String">
        update user
        set last_login_time = current_timestamp 
        where username = #{username}
    </update>
    
    <update id="updatePasswordByUserId">
        update user
        set password = #{password},
        salt = #{salt}
        where user_id = #{userId}
    </update>
    
    <select id="countByUsername" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*)
        from user
        where username = #{username}
    </select>
    
    <select id="countByUsernameNotIncludeUserId" resultType="java.lang.Integer">
        select count(*)
        from user
        where username = #{username}
        and user_id != #{userId}
    </select>

    <update id="updateByPrimaryKeySelective" parameterType="com.ams.system.entity.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=INTEGER}
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    
    <update id="updateStatusByUserId">
        update user 
        set 
        `status` = #{status,jdbcType=INTEGER}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    
    <update id="setNullWithStudentId">
        update user 
        set 
        student_id = null 
        where student_id = #{studentId}
    </update>

    <select id="selectAllWithQuery" resultMap="BaseResultMap">
        select user_id, username, `password`, salt, `status`, last_login_time, create_time, 
        modify_time, email, phone, student_id
        from user
        where 1=1
        <if test="userId != null">
            and user_id = #{userId}
        </if>
        <if test="username != null">
            and username = #{username}
        </if>
        <if test="status != null">
            and status = #{status}
        </if>
        <if test="email != null">
            and email = #{email}
        </if>
        <if test="phone!= null">
            and phone = #{phone}
        </if>
        <if test="studentId != null">
            and student_id = #{studentId}
        </if>
        
    </select>
    
</mapper>