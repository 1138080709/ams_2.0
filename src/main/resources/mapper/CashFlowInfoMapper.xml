<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ams.system.dao.CashFlowInfoMapper">
  <resultMap id="BaseResultMap" type="com.ams.system.entity.CashFlowInfo">
    <id column="cash_flow_id" jdbcType="INTEGER" property="cashFlowId" />
    <result column="info_type" jdbcType="INTEGER" property="infoType" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="proposer_id" jdbcType="INTEGER" property="proposerId" />
    <result column="applicate_time" jdbcType="TIMESTAMP" property="applicateTime" />
    <result column="auditor_id" jdbcType="INTEGER" property="auditorId" />
    <result column="audit_flag" jdbcType="INTEGER" property="auditFlag" />
    <result column="execute_flag" jdbcType="INTEGER" property="executeFlag" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cash_flow_info
    where cash_flow_id = #{cashFlowId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ams.system.entity.CashFlowInfo">
    insert into cash_flow_info (cash_flow_id, info_type, money, 
      remark, proposer_id, applicate_time, 
      auditor_id, audit_flag, execute_flag
      )
    values (#{cashFlowId,jdbcType=INTEGER}, #{infoType,jdbcType=INTEGER}, #{money,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{proposerId,jdbcType=INTEGER}, #{applicateTime,jdbcType=TIMESTAMP}, 
      #{auditorId,jdbcType=INTEGER}, #{auditFlag,jdbcType=INTEGER}, #{executeFlag,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.ams.system.entity.CashFlowInfo">
    update cash_flow_info
    set info_type = #{infoType,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      proposer_id = #{proposerId,jdbcType=INTEGER},
      applicate_time = #{applicateTime,jdbcType=TIMESTAMP},
      auditor_id = #{auditorId,jdbcType=INTEGER},
      audit_flag = #{auditFlag,jdbcType=INTEGER},
      execute_flag = #{executeFlag,jdbcType=INTEGER}
    where cash_flow_id = #{cashFlowId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select cash_flow_id, info_type, money, remark, proposer_id, applicate_time, auditor_id, 
    audit_flag, execute_flag
    from cash_flow_info
    where cash_flow_id = #{cashFlowId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select cash_flow_id, info_type, money, remark, proposer_id, applicate_time, auditor_id, 
    audit_flag, execute_flag
    from cash_flow_info
  </select>
</mapper>